@use "sass:math";
@use "sass:color";

/* ============================================ */

//リンク色指定
//@include global.linkColor($color);
@mixin linkColor($color) {
  color: $color;
  &:hover,
  &:active,
  &:focus {
    color: lighten($color, 20%);
  }
}

/* ============================================ */

//.using{
//  @include lhCrop(80/40) ;
//  font-size: 40px;
//  line-height: (80/40);
//}

//見出し line-height詰め
//@include global.lhCrop(line-height/fontsize);
@mixin lhCrop($line-height) {
  &::before {
    display: block;
    width: 0;
    height: 0;
    margin-top: calc((1 - #{$line-height}) * 0.5em);
    content: "";
  }
}

/* ============================================ */

//.using{
//  @include widtnPercent(400, 1280);
//  background:#eee;
//}

//横幅 px → % 変換
// @include global.widtnPercent(子要素, 親要素);
@mixin widtnPercent($pxWidth, $parentPxWidth) {
  width: floor((($pxWidth / $parentPxWidth) * 10000%) / 100);
}

/* ============================================ */

//.using {
//  @include global.global.fzPercentSP(px);
//  @include global.desktop {
//    @include global.fzPercentSP(px);
//  }
//}

//font-size可変 SP
// @include global.fzPercentSP(px);
@mixin fzPercentSP($pxWidth) {
  font-size: (($pxWidth / 320 /*SPデザイン横幅*/) * 10000vw) / 100;
}

//font-size可変 PC
// @include global.fzPercentPC(px);
@mixin fzPercentPC($pxWidth) {
  font-size: (($pxWidth / 1200 /*PCデザイン横幅*/) * 10000vw) / 100;
}

/* ============================================ */

// object-fit
// @include global.object-fit;
@mixin object_fit($fit: cover, $position: null) {
  object-fit: $fit;
  @if $position {
    object-position: $position;
    font-family: "object-fit: #{$fit}; object-position: #{$position}";
  } @else {
    font-family: "object-fit: #{$fit};";
  }
}

/* ============================================ */

// display noneの代替
// @include global.visually-hidden:
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  border: 0;
}

/* ============================================ */

// 各ブラウザハック

// Mozilla Firefox
// @include global.only_firefox{}
@mixin only_firefox {
  @supports (-moz-appearance: meterbar) {
    @content;
  }
}

// Safari
// @include global.only_safari{}
@mixin only_safari {
  @supports (paint-order: fill) and (-webkit-marquee-speed: 0) {
    @content;
  }
}

// iOS Safari
// @include global.only_iOS{}
@mixin only_iOS {
  @supports (-webkit-text-size-adjust: none) and (not (-ms-accelerator: true)) and (not (-moz-appearance: none)) {
    @content;
  }
}

// Microsoft Edge
// @include global.only_edge{}
@mixin only_edge {
  @supports (-ms-ime-align: auto) {
    @content;
  }
}

// Internet Explorer
// @include global.only_IE{}
@mixin only_IE {
  /* stylelint-disable-next-line selector-type-no-unknown */
  _:-ms-input-placeholder,
  :root & {
    @content;
  }
}

// @supportsを用いたIEハック
// .using {
//   IE用の記述
//   @supports (appearance: none) {
//     IE以外用の記述
//   }
// }

// @include global.not_IE{}
@mixin not_IE {
  @supports (appearance: none) {
    @content;
  }
}

/* ============================================ */

//行間相対値
//@include global.line-h
@mixin line-h($fz, $line) {
  line-height: math.div($line, $fz);
}

/* ============================================ */

//固定コンテンツ内の横幅100%表示
//@include global.fullsize
@mixin fullsize {
  position: relative;
  right: 50%;
  left: 50%;
  width: 100vw;
  margin-right: -50vw;
  margin-left: -50vw;
}

/* ============================================ */

